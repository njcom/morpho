#!/usr/bin/env bash

set -eu

SCRIPT_DIR_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
declare -r SCRIPT_DIR_PATH
#SCRIPT_FILE_NAME="$(basename "$0")"
#declare -r SCRIPT_FILE_NAME
#declare -r SCRIPT_FILE_PATH="$SCRIPT_DIR_PATH"/"$SCRIPT_FILE_NAME"
THIS_MODULE_DIR_PATH="$(realpath -e "$SCRIPT_DIR_PATH"/../..)"
declare -r THIS_MODULE_DIR_PATH
declare -r MODULE_DIR_PATH="$THIS_MODULE_DIR_PATH"/module
declare -r FRONTEND_DIR_PATH="$THIS_MODULE_DIR_PATH"/frontend
declare -r TEST_DB=test

#WWW_USER=$(id -u)
#WWW_GROUP=$(id -g)
#declare -r WWW_USER WWW_GROUP
declare -r WWW_USER=www-data
declare -r WWW_GROUP="$WWW_USER"

show_facts() {
#    env
    pwd
    ls -alh "$THIS_MODULE_DIR_PATH"
    id
    cat /etc/os-release
    which -a php
    php --version
    composer --version
}

install_npm_packages() {
    echo Installing global NPM packages...
    sudo npm install -g typescript@next sass rollup yarn

    echo Installing local NPM packages...
    while IFS= read -r -d '' path; do
        pushd "$(dirname "$path")" > /dev/null
        npm install
        popd > /dev/null
    done < <(find . -name node_modules -type d -print0)
}

prepare_env() {
    export MORPHO_CI=GitHub MORPHO_CI_DEBUG=1 MORPHO_TEST_WEB_SERVER_DOMAIN=localhost MORPHO_TEST_WEB_SERVER_PORT=80 MORPHO_GECKO_BIN_FILE_PATH=/usr/bin/geckodriver

    # Create block device for tests
    sudo mknod -m 0777 /tmp/block-dev-test b 125 1
    sudo chown "$(id -u)":"$(id -g)" /tmp/block-dev-test

    # To running firefox, see https://docs.travis-ci.com/user/gui-and-headless-browsers/
    export DISPLAY=:99
    # `start-stop-daemon` is provided by the `dpkg` package
    /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16

    install_npm_packages

    sudo apt update && sudo apt install -y nginx
    # shellcheck disable=SC2016
    echo "
    server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # Catch all
    server_name _;

    root $FRONTEND_DIR_PATH;
    index index.php;
    try_files \$uri /index.php?\$args;

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.4-fpm.sock;
    }
}" | sudo tee > /dev/null /etc/nginx/sites-enabled/default
    sudo nginx -t
    sudo chown -R "$WWW_USER":"$WWW_GROUP" "$FRONTEND_DIR_PATH" "$MODULE_DIR_PATH"/localhost/{log,tmp/cache}
    sudo systemctl restart nginx

    composer --ignore-platform-reqs --no-ansi --no-interaction install

    sudo systemctl restart mysql
    export MORPHO_TEST_DB_USER=root MORPHO_TEST_DB_PASSWORD=root MORPHO_TEST_DB_DB="$TEST_DB"
    mysql -u"$MORPHO_TEST_DB_USER" -p"$MORPHO_TEST_DB_PASSWORD" -e "DROP DATABASE IF EXISTS $MORPHO_TEST_DB_DB; CREATE DATABASE $MORPHO_TEST_DB_DB DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci"
    mysql -u"$MORPHO_TEST_DB_USER" -p"$MORPHO_TEST_DB_PASSWORD" -e "SHOW DATABASES"
}

# shellcheck disable=SC2120
show_sep() {
    echo --------------------------------------------------------------------------------
    if [[ $# -gt 0 ]]; then
        echo "$@"
    fi
}

run_tests() {
    #set +e
    make test
    #declare -r exit_code=$?
    #set -e
    #if [[ $exit_code -ne 0 ]]; then
    #    mkdir -p "$MODULE_DIR_PATH/localhost/log/"
    #    if [[ -d $MODULE_DIR_PATH/localhost/log ]]; then
    #        show_sep
    #        echo "$MODULE_DIR_PATH/localhost/log/*"
    #        sudo sh -c "cat $MODULE_DIR_PATH/localhost/log/*"
    #    fi
    #    exit $exit_code
    #fi

    #show_sep "Run linter"
    #php "$BASE_DIR_PATH"/bin/lint
}

deploy_results() {
    :
    ## https://docs.travis-ci.com/user/deployment/pages/
    ## deploy nightly builds
    ##deploy:
    ##  provider: pages
    ##  skip-cleanup: true
    ##  github-token: $GITHUB_TOKEN
    ##  keep-history: true
    ##  # Directory to push to GitHub Pages, relative to the current directory, defaults to the current directory (example: your_build_folder)
    ##  local-dir: test/result
    ##  # Optional, be verbose about internal steps, defaults to false.
    ##  verbose: false
    ##  on:
    ##    repo: morpho-os/morpho-os.github.io
    ##    branch: master
}

main() {
    show_sep "FACTS: Show facts"
    show_facts

    show_sep "BUILD: Prepare environment"
    prepare_env

    show_sep "TEST: Run tests"
    run_tests

    show_sep "DEPLOY: Deploy results"
    deploy_results
}

main
