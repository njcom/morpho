Token(type=55 (OP), string='@', start=(1, 0), end=(1, 1), line='@subheader """\\\n')
Token(type=1 (NAME), string='subheader', start=(1, 1), end=(1, 10), line='@subheader """\\\n')
Token(type=3 (STRING), string='"""\\\nfrom ast import literal_eval\n\nfrom pegen.grammar import (\n    Alt,\n    Cut,\n    Forced,\n    Gather,\n    Group,\n    Item,\n    Lookahead,\n    LookaheadOrCut,\n    MetaTuple,\n    MetaList,\n    NameLeaf,\n    NamedItem,\n    NamedItemList,\n    NegativeLookahead,\n    Opt,\n    Plain,\n    PositiveLookahead,\n    Repeat0,\n    Repeat1,\n    Rhs,\n    Rule,\n    RuleList,\n    RuleName,\n    Grammar,\n    StringLeaf,\n)\n"""', start=(1, 11), end=(31, 3), line='@subheader """\\\nfrom ast import literal_eval\n\nfrom pegen.grammar import (\n    Alt,\n    Cut,\n    Forced,\n    Gather,\n    Group,\n    Item,\n    Lookahead,\n    LookaheadOrCut,\n    MetaTuple,\n    MetaList,\n    NameLeaf,\n    NamedItem,\n    NamedItemList,\n    NegativeLookahead,\n    Opt,\n    Plain,\n    PositiveLookahead,\n    Repeat0,\n    Repeat1,\n    Rhs,\n    Rule,\n    RuleList,\n    RuleName,\n    Grammar,\n    StringLeaf,\n)\n"""\n')
Token(type=4 (NEWLINE), string='\n', start=(31, 3), end=(31, 4), line='"""\n')
Token(type=65 (NL), string='\n', start=(32, 0), end=(32, 1), line='\n')
Token(type=1 (NAME), string='start', start=(33, 0), end=(33, 5), line='start[Grammar]: grammar ENDMARKER { grammar }\n')
Token(type=55 (OP), string='[', start=(33, 5), end=(33, 6), line='start[Grammar]: grammar ENDMARKER { grammar }\n')
Token(type=1 (NAME), string='Grammar', start=(33, 6), end=(33, 13), line='start[Grammar]: grammar ENDMARKER { grammar }\n')
Token(type=55 (OP), string=']', start=(33, 13), end=(33, 14), line='start[Grammar]: grammar ENDMARKER { grammar }\n')
Token(type=55 (OP), string=':', start=(33, 14), end=(33, 15), line='start[Grammar]: grammar ENDMARKER { grammar }\n')
Token(type=1 (NAME), string='grammar', start=(33, 16), end=(33, 23), line='start[Grammar]: grammar ENDMARKER { grammar }\n')
Token(type=1 (NAME), string='ENDMARKER', start=(33, 24), end=(33, 33), line='start[Grammar]: grammar ENDMARKER { grammar }\n')
Token(type=55 (OP), string='{', start=(33, 34), end=(33, 35), line='start[Grammar]: grammar ENDMARKER { grammar }\n')
Token(type=1 (NAME), string='grammar', start=(33, 36), end=(33, 43), line='start[Grammar]: grammar ENDMARKER { grammar }\n')
Token(type=55 (OP), string='}', start=(33, 44), end=(33, 45), line='start[Grammar]: grammar ENDMARKER { grammar }\n')
Token(type=4 (NEWLINE), string='\n', start=(33, 45), end=(33, 46), line='start[Grammar]: grammar ENDMARKER { grammar }\n')
Token(type=65 (NL), string='\n', start=(34, 0), end=(34, 1), line='\n')
Token(type=1 (NAME), string='grammar', start=(35, 0), end=(35, 7), line='grammar[Grammar]:\n')
Token(type=55 (OP), string='[', start=(35, 7), end=(35, 8), line='grammar[Grammar]:\n')
Token(type=1 (NAME), string='Grammar', start=(35, 8), end=(35, 15), line='grammar[Grammar]:\n')
Token(type=55 (OP), string=']', start=(35, 15), end=(35, 16), line='grammar[Grammar]:\n')
Token(type=55 (OP), string=':', start=(35, 16), end=(35, 17), line='grammar[Grammar]:\n')
Token(type=4 (NEWLINE), string='\n', start=(35, 17), end=(35, 18), line='grammar[Grammar]:\n')
Token(type=5 (INDENT), string='    ', start=(36, 0), end=(36, 4), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=55 (OP), string='|', start=(36, 4), end=(36, 5), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=1 (NAME), string='metas', start=(36, 6), end=(36, 11), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=1 (NAME), string='rules', start=(36, 12), end=(36, 17), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=55 (OP), string='{', start=(36, 18), end=(36, 19), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=1 (NAME), string='Grammar', start=(36, 20), end=(36, 27), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=55 (OP), string='(', start=(36, 27), end=(36, 28), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=1 (NAME), string='rules', start=(36, 28), end=(36, 33), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=55 (OP), string=',', start=(36, 33), end=(36, 34), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=1 (NAME), string='metas', start=(36, 35), end=(36, 40), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=55 (OP), string=')', start=(36, 40), end=(36, 41), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=55 (OP), string='}', start=(36, 42), end=(36, 43), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=4 (NEWLINE), string='\n', start=(36, 43), end=(36, 44), line='    | metas rules { Grammar(rules, metas) }\n')
Token(type=55 (OP), string='|', start=(37, 4), end=(37, 5), line='    | rules { Grammar(rules, []) }\n')
Token(type=1 (NAME), string='rules', start=(37, 6), end=(37, 11), line='    | rules { Grammar(rules, []) }\n')
Token(type=55 (OP), string='{', start=(37, 12), end=(37, 13), line='    | rules { Grammar(rules, []) }\n')
Token(type=1 (NAME), string='Grammar', start=(37, 14), end=(37, 21), line='    | rules { Grammar(rules, []) }\n')
Token(type=55 (OP), string='(', start=(37, 21), end=(37, 22), line='    | rules { Grammar(rules, []) }\n')
Token(type=1 (NAME), string='rules', start=(37, 22), end=(37, 27), line='    | rules { Grammar(rules, []) }\n')
Token(type=55 (OP), string=',', start=(37, 27), end=(37, 28), line='    | rules { Grammar(rules, []) }\n')
Token(type=55 (OP), string='[', start=(37, 29), end=(37, 30), line='    | rules { Grammar(rules, []) }\n')
Token(type=55 (OP), string=']', start=(37, 30), end=(37, 31), line='    | rules { Grammar(rules, []) }\n')
Token(type=55 (OP), string=')', start=(37, 31), end=(37, 32), line='    | rules { Grammar(rules, []) }\n')
Token(type=55 (OP), string='}', start=(37, 33), end=(37, 34), line='    | rules { Grammar(rules, []) }\n')
Token(type=4 (NEWLINE), string='\n', start=(37, 34), end=(37, 35), line='    | rules { Grammar(rules, []) }\n')
Token(type=65 (NL), string='\n', start=(38, 0), end=(38, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(39, 0), end=(39, 0), line='metas[MetaList]:\n')
Token(type=1 (NAME), string='metas', start=(39, 0), end=(39, 5), line='metas[MetaList]:\n')
Token(type=55 (OP), string='[', start=(39, 5), end=(39, 6), line='metas[MetaList]:\n')
Token(type=1 (NAME), string='MetaList', start=(39, 6), end=(39, 14), line='metas[MetaList]:\n')
Token(type=55 (OP), string=']', start=(39, 14), end=(39, 15), line='metas[MetaList]:\n')
Token(type=55 (OP), string=':', start=(39, 15), end=(39, 16), line='metas[MetaList]:\n')
Token(type=4 (NEWLINE), string='\n', start=(39, 16), end=(39, 17), line='metas[MetaList]:\n')
Token(type=5 (INDENT), string='    ', start=(40, 0), end=(40, 4), line='    | meta metas { [meta] + metas }\n')
Token(type=55 (OP), string='|', start=(40, 4), end=(40, 5), line='    | meta metas { [meta] + metas }\n')
Token(type=1 (NAME), string='meta', start=(40, 6), end=(40, 10), line='    | meta metas { [meta] + metas }\n')
Token(type=1 (NAME), string='metas', start=(40, 11), end=(40, 16), line='    | meta metas { [meta] + metas }\n')
Token(type=55 (OP), string='{', start=(40, 17), end=(40, 18), line='    | meta metas { [meta] + metas }\n')
Token(type=55 (OP), string='[', start=(40, 19), end=(40, 20), line='    | meta metas { [meta] + metas }\n')
Token(type=1 (NAME), string='meta', start=(40, 20), end=(40, 24), line='    | meta metas { [meta] + metas }\n')
Token(type=55 (OP), string=']', start=(40, 24), end=(40, 25), line='    | meta metas { [meta] + metas }\n')
Token(type=55 (OP), string='+', start=(40, 26), end=(40, 27), line='    | meta metas { [meta] + metas }\n')
Token(type=1 (NAME), string='metas', start=(40, 28), end=(40, 33), line='    | meta metas { [meta] + metas }\n')
Token(type=55 (OP), string='}', start=(40, 34), end=(40, 35), line='    | meta metas { [meta] + metas }\n')
Token(type=4 (NEWLINE), string='\n', start=(40, 35), end=(40, 36), line='    | meta metas { [meta] + metas }\n')
Token(type=55 (OP), string='|', start=(41, 4), end=(41, 5), line='    | meta { [meta] }\n')
Token(type=1 (NAME), string='meta', start=(41, 6), end=(41, 10), line='    | meta { [meta] }\n')
Token(type=55 (OP), string='{', start=(41, 11), end=(41, 12), line='    | meta { [meta] }\n')
Token(type=55 (OP), string='[', start=(41, 13), end=(41, 14), line='    | meta { [meta] }\n')
Token(type=1 (NAME), string='meta', start=(41, 14), end=(41, 18), line='    | meta { [meta] }\n')
Token(type=55 (OP), string=']', start=(41, 18), end=(41, 19), line='    | meta { [meta] }\n')
Token(type=55 (OP), string='}', start=(41, 20), end=(41, 21), line='    | meta { [meta] }\n')
Token(type=4 (NEWLINE), string='\n', start=(41, 21), end=(41, 22), line='    | meta { [meta] }\n')
Token(type=65 (NL), string='\n', start=(42, 0), end=(42, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(43, 0), end=(43, 0), line='meta[MetaTuple]:\n')
Token(type=1 (NAME), string='meta', start=(43, 0), end=(43, 4), line='meta[MetaTuple]:\n')
Token(type=55 (OP), string='[', start=(43, 4), end=(43, 5), line='meta[MetaTuple]:\n')
Token(type=1 (NAME), string='MetaTuple', start=(43, 5), end=(43, 14), line='meta[MetaTuple]:\n')
Token(type=55 (OP), string=']', start=(43, 14), end=(43, 15), line='meta[MetaTuple]:\n')
Token(type=55 (OP), string=':', start=(43, 15), end=(43, 16), line='meta[MetaTuple]:\n')
Token(type=4 (NEWLINE), string='\n', start=(43, 16), end=(43, 17), line='meta[MetaTuple]:\n')
Token(type=5 (INDENT), string='    ', start=(44, 0), end=(44, 4), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=55 (OP), string='|', start=(44, 4), end=(44, 5), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=3 (STRING), string='"@"', start=(44, 6), end=(44, 9), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=1 (NAME), string='NAME', start=(44, 10), end=(44, 14), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=1 (NAME), string='NEWLINE', start=(44, 15), end=(44, 22), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=55 (OP), string='{', start=(44, 23), end=(44, 24), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=55 (OP), string='(', start=(44, 25), end=(44, 26), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=1 (NAME), string='name', start=(44, 26), end=(44, 30), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=55 (OP), string='.', start=(44, 30), end=(44, 31), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=1 (NAME), string='string', start=(44, 31), end=(44, 37), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=55 (OP), string=',', start=(44, 37), end=(44, 38), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=1 (NAME), string='None', start=(44, 39), end=(44, 43), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=55 (OP), string=')', start=(44, 43), end=(44, 44), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=55 (OP), string='}', start=(44, 45), end=(44, 46), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=4 (NEWLINE), string='\n', start=(44, 46), end=(44, 47), line='    | "@" NAME NEWLINE { (name.string, None) }\n')
Token(type=55 (OP), string='|', start=(45, 4), end=(45, 5), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=3 (STRING), string='"@"', start=(45, 6), end=(45, 9), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=1 (NAME), string='a', start=(45, 10), end=(45, 11), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=55 (OP), string='=', start=(45, 11), end=(45, 12), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=1 (NAME), string='NAME', start=(45, 12), end=(45, 16), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=1 (NAME), string='b', start=(45, 17), end=(45, 18), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=55 (OP), string='=', start=(45, 18), end=(45, 19), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=1 (NAME), string='NAME', start=(45, 19), end=(45, 23), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=1 (NAME), string='NEWLINE', start=(45, 24), end=(45, 31), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=55 (OP), string='{', start=(45, 32), end=(45, 33), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=55 (OP), string='(', start=(45, 34), end=(45, 35), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=1 (NAME), string='a', start=(45, 35), end=(45, 36), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=55 (OP), string='.', start=(45, 36), end=(45, 37), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=1 (NAME), string='string', start=(45, 37), end=(45, 43), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=55 (OP), string=',', start=(45, 43), end=(45, 44), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=1 (NAME), string='b', start=(45, 45), end=(45, 46), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=55 (OP), string='.', start=(45, 46), end=(45, 47), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=1 (NAME), string='string', start=(45, 47), end=(45, 53), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=55 (OP), string=')', start=(45, 53), end=(45, 54), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=55 (OP), string='}', start=(45, 55), end=(45, 56), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=4 (NEWLINE), string='\n', start=(45, 56), end=(45, 57), line='    | "@" a=NAME b=NAME NEWLINE { (a.string, b.string) }\n')
Token(type=55 (OP), string='|', start=(46, 4), end=(46, 5), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=3 (STRING), string='"@"', start=(46, 6), end=(46, 9), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=1 (NAME), string='NAME', start=(46, 10), end=(46, 14), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=1 (NAME), string='STRING', start=(46, 15), end=(46, 21), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=1 (NAME), string='NEWLINE', start=(46, 22), end=(46, 29), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=55 (OP), string='{', start=(46, 30), end=(46, 31), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=55 (OP), string='(', start=(46, 32), end=(46, 33), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=1 (NAME), string='name', start=(46, 33), end=(46, 37), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=55 (OP), string='.', start=(46, 37), end=(46, 38), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=1 (NAME), string='string', start=(46, 38), end=(46, 44), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=55 (OP), string=',', start=(46, 44), end=(46, 45), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=1 (NAME), string='literal_eval', start=(46, 46), end=(46, 58), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=55 (OP), string='(', start=(46, 58), end=(46, 59), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=1 (NAME), string='string', start=(46, 59), end=(46, 65), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=55 (OP), string='.', start=(46, 65), end=(46, 66), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=1 (NAME), string='string', start=(46, 66), end=(46, 72), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=55 (OP), string=')', start=(46, 72), end=(46, 73), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=55 (OP), string=')', start=(46, 73), end=(46, 74), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=55 (OP), string='}', start=(46, 75), end=(46, 76), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=4 (NEWLINE), string='\n', start=(46, 76), end=(46, 77), line='    | "@" NAME STRING NEWLINE { (name.string, literal_eval(string.string)) }\n')
Token(type=65 (NL), string='\n', start=(47, 0), end=(47, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(48, 0), end=(48, 0), line='rules[RuleList]:\n')
Token(type=1 (NAME), string='rules', start=(48, 0), end=(48, 5), line='rules[RuleList]:\n')
Token(type=55 (OP), string='[', start=(48, 5), end=(48, 6), line='rules[RuleList]:\n')
Token(type=1 (NAME), string='RuleList', start=(48, 6), end=(48, 14), line='rules[RuleList]:\n')
Token(type=55 (OP), string=']', start=(48, 14), end=(48, 15), line='rules[RuleList]:\n')
Token(type=55 (OP), string=':', start=(48, 15), end=(48, 16), line='rules[RuleList]:\n')
Token(type=4 (NEWLINE), string='\n', start=(48, 16), end=(48, 17), line='rules[RuleList]:\n')
Token(type=5 (INDENT), string='    ', start=(49, 0), end=(49, 4), line='    | rule rules { [rule] + rules }\n')
Token(type=55 (OP), string='|', start=(49, 4), end=(49, 5), line='    | rule rules { [rule] + rules }\n')
Token(type=1 (NAME), string='rule', start=(49, 6), end=(49, 10), line='    | rule rules { [rule] + rules }\n')
Token(type=1 (NAME), string='rules', start=(49, 11), end=(49, 16), line='    | rule rules { [rule] + rules }\n')
Token(type=55 (OP), string='{', start=(49, 17), end=(49, 18), line='    | rule rules { [rule] + rules }\n')
Token(type=55 (OP), string='[', start=(49, 19), end=(49, 20), line='    | rule rules { [rule] + rules }\n')
Token(type=1 (NAME), string='rule', start=(49, 20), end=(49, 24), line='    | rule rules { [rule] + rules }\n')
Token(type=55 (OP), string=']', start=(49, 24), end=(49, 25), line='    | rule rules { [rule] + rules }\n')
Token(type=55 (OP), string='+', start=(49, 26), end=(49, 27), line='    | rule rules { [rule] + rules }\n')
Token(type=1 (NAME), string='rules', start=(49, 28), end=(49, 33), line='    | rule rules { [rule] + rules }\n')
Token(type=55 (OP), string='}', start=(49, 34), end=(49, 35), line='    | rule rules { [rule] + rules }\n')
Token(type=4 (NEWLINE), string='\n', start=(49, 35), end=(49, 36), line='    | rule rules { [rule] + rules }\n')
Token(type=55 (OP), string='|', start=(50, 4), end=(50, 5), line='    | rule { [rule] }\n')
Token(type=1 (NAME), string='rule', start=(50, 6), end=(50, 10), line='    | rule { [rule] }\n')
Token(type=55 (OP), string='{', start=(50, 11), end=(50, 12), line='    | rule { [rule] }\n')
Token(type=55 (OP), string='[', start=(50, 13), end=(50, 14), line='    | rule { [rule] }\n')
Token(type=1 (NAME), string='rule', start=(50, 14), end=(50, 18), line='    | rule { [rule] }\n')
Token(type=55 (OP), string=']', start=(50, 18), end=(50, 19), line='    | rule { [rule] }\n')
Token(type=55 (OP), string='}', start=(50, 20), end=(50, 21), line='    | rule { [rule] }\n')
Token(type=4 (NEWLINE), string='\n', start=(50, 21), end=(50, 22), line='    | rule { [rule] }\n')
Token(type=65 (NL), string='\n', start=(51, 0), end=(51, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(52, 0), end=(52, 0), line='rule[Rule]:\n')
Token(type=1 (NAME), string='rule', start=(52, 0), end=(52, 4), line='rule[Rule]:\n')
Token(type=55 (OP), string='[', start=(52, 4), end=(52, 5), line='rule[Rule]:\n')
Token(type=1 (NAME), string='Rule', start=(52, 5), end=(52, 9), line='rule[Rule]:\n')
Token(type=55 (OP), string=']', start=(52, 9), end=(52, 10), line='rule[Rule]:\n')
Token(type=55 (OP), string=':', start=(52, 10), end=(52, 11), line='rule[Rule]:\n')
Token(type=4 (NEWLINE), string='\n', start=(52, 11), end=(52, 12), line='rule[Rule]:\n')
Token(type=5 (INDENT), string='    ', start=(53, 0), end=(53, 4), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=55 (OP), string='|', start=(53, 4), end=(53, 5), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='rulename', start=(53, 6), end=(53, 14), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='memoflag', start=(53, 15), end=(53, 23), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=55 (OP), string='?', start=(53, 23), end=(53, 24), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=3 (STRING), string='":"', start=(53, 25), end=(53, 28), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='alts', start=(53, 29), end=(53, 33), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='NEWLINE', start=(53, 34), end=(53, 41), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='INDENT', start=(53, 42), end=(53, 48), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='more_alts', start=(53, 49), end=(53, 58), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='DEDENT', start=(53, 59), end=(53, 65), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=55 (OP), string='{', start=(53, 66), end=(53, 67), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=65 (NL), string='\n', start=(53, 67), end=(53, 68), line='    | rulename memoflag? ":" alts NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='Rule', start=(54, 10), end=(54, 14), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string='(', start=(54, 14), end=(54, 15), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=1 (NAME), string='rulename', start=(54, 15), end=(54, 23), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string='[', start=(54, 23), end=(54, 24), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=2 (NUMBER), string='0', start=(54, 24), end=(54, 25), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string=']', start=(54, 25), end=(54, 26), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string=',', start=(54, 26), end=(54, 27), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=1 (NAME), string='rulename', start=(54, 28), end=(54, 36), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string='[', start=(54, 36), end=(54, 37), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=2 (NUMBER), string='1', start=(54, 37), end=(54, 38), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string=']', start=(54, 38), end=(54, 39), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string=',', start=(54, 39), end=(54, 40), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=1 (NAME), string='Rhs', start=(54, 41), end=(54, 44), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string='(', start=(54, 44), end=(54, 45), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=1 (NAME), string='alts', start=(54, 45), end=(54, 49), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string='.', start=(54, 49), end=(54, 50), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=1 (NAME), string='alts', start=(54, 50), end=(54, 54), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string='+', start=(54, 55), end=(54, 56), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=1 (NAME), string='more_alts', start=(54, 57), end=(54, 66), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string='.', start=(54, 66), end=(54, 67), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=1 (NAME), string='alts', start=(54, 67), end=(54, 71), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string=')', start=(54, 71), end=(54, 72), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string=',', start=(54, 72), end=(54, 73), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=1 (NAME), string='memo', start=(54, 74), end=(54, 78), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string='=', start=(54, 78), end=(54, 79), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=1 (NAME), string='opt', start=(54, 79), end=(54, 82), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string=')', start=(54, 82), end=(54, 83), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string='}', start=(54, 84), end=(54, 85), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=4 (NEWLINE), string='\n', start=(54, 85), end=(54, 86), line='          Rule(rulename[0], rulename[1], Rhs(alts.alts + more_alts.alts), memo=opt) }\n')
Token(type=55 (OP), string='|', start=(55, 4), end=(55, 5), line='    | rulename memoflag? ":" NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='rulename', start=(55, 6), end=(55, 14), line='    | rulename memoflag? ":" NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='memoflag', start=(55, 15), end=(55, 23), line='    | rulename memoflag? ":" NEWLINE INDENT more_alts DEDENT {\n')
Token(type=55 (OP), string='?', start=(55, 23), end=(55, 24), line='    | rulename memoflag? ":" NEWLINE INDENT more_alts DEDENT {\n')
Token(type=3 (STRING), string='":"', start=(55, 25), end=(55, 28), line='    | rulename memoflag? ":" NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='NEWLINE', start=(55, 29), end=(55, 36), line='    | rulename memoflag? ":" NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='INDENT', start=(55, 37), end=(55, 43), line='    | rulename memoflag? ":" NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='more_alts', start=(55, 44), end=(55, 53), line='    | rulename memoflag? ":" NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='DEDENT', start=(55, 54), end=(55, 60), line='    | rulename memoflag? ":" NEWLINE INDENT more_alts DEDENT {\n')
Token(type=55 (OP), string='{', start=(55, 61), end=(55, 62), line='    | rulename memoflag? ":" NEWLINE INDENT more_alts DEDENT {\n')
Token(type=65 (NL), string='\n', start=(55, 62), end=(55, 63), line='    | rulename memoflag? ":" NEWLINE INDENT more_alts DEDENT {\n')
Token(type=1 (NAME), string='Rule', start=(56, 10), end=(56, 14), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string='(', start=(56, 14), end=(56, 15), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=1 (NAME), string='rulename', start=(56, 15), end=(56, 23), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string='[', start=(56, 23), end=(56, 24), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=2 (NUMBER), string='0', start=(56, 24), end=(56, 25), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string=']', start=(56, 25), end=(56, 26), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string=',', start=(56, 26), end=(56, 27), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=1 (NAME), string='rulename', start=(56, 28), end=(56, 36), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string='[', start=(56, 36), end=(56, 37), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=2 (NUMBER), string='1', start=(56, 37), end=(56, 38), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string=']', start=(56, 38), end=(56, 39), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string=',', start=(56, 39), end=(56, 40), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=1 (NAME), string='more_alts', start=(56, 41), end=(56, 50), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string=',', start=(56, 50), end=(56, 51), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=1 (NAME), string='memo', start=(56, 52), end=(56, 56), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string='=', start=(56, 56), end=(56, 57), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=1 (NAME), string='opt', start=(56, 57), end=(56, 60), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string=')', start=(56, 60), end=(56, 61), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string='}', start=(56, 62), end=(56, 63), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=4 (NEWLINE), string='\n', start=(56, 63), end=(56, 64), line='          Rule(rulename[0], rulename[1], more_alts, memo=opt) }\n')
Token(type=55 (OP), string='|', start=(57, 4), end=(57, 5), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=1 (NAME), string='rulename', start=(57, 6), end=(57, 14), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=1 (NAME), string='memoflag', start=(57, 15), end=(57, 23), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string='?', start=(57, 23), end=(57, 24), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=3 (STRING), string='":"', start=(57, 25), end=(57, 28), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=1 (NAME), string='alts', start=(57, 29), end=(57, 33), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=1 (NAME), string='NEWLINE', start=(57, 34), end=(57, 41), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string='{', start=(57, 42), end=(57, 43), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=1 (NAME), string='Rule', start=(57, 44), end=(57, 48), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string='(', start=(57, 48), end=(57, 49), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=1 (NAME), string='rulename', start=(57, 49), end=(57, 57), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string='[', start=(57, 57), end=(57, 58), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=2 (NUMBER), string='0', start=(57, 58), end=(57, 59), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string=']', start=(57, 59), end=(57, 60), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string=',', start=(57, 60), end=(57, 61), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=1 (NAME), string='rulename', start=(57, 62), end=(57, 70), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string='[', start=(57, 70), end=(57, 71), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=2 (NUMBER), string='1', start=(57, 71), end=(57, 72), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string=']', start=(57, 72), end=(57, 73), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string=',', start=(57, 73), end=(57, 74), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=1 (NAME), string='alts', start=(57, 75), end=(57, 79), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string=',', start=(57, 79), end=(57, 80), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=1 (NAME), string='memo', start=(57, 81), end=(57, 85), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string='=', start=(57, 85), end=(57, 86), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=1 (NAME), string='opt', start=(57, 86), end=(57, 89), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string=')', start=(57, 89), end=(57, 90), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=55 (OP), string='}', start=(57, 91), end=(57, 92), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=4 (NEWLINE), string='\n', start=(57, 92), end=(57, 93), line='    | rulename memoflag? ":" alts NEWLINE { Rule(rulename[0], rulename[1], alts, memo=opt) }\n')
Token(type=65 (NL), string='\n', start=(58, 0), end=(58, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(59, 0), end=(59, 0), line='rulename[RuleName]:\n')
Token(type=1 (NAME), string='rulename', start=(59, 0), end=(59, 8), line='rulename[RuleName]:\n')
Token(type=55 (OP), string='[', start=(59, 8), end=(59, 9), line='rulename[RuleName]:\n')
Token(type=1 (NAME), string='RuleName', start=(59, 9), end=(59, 17), line='rulename[RuleName]:\n')
Token(type=55 (OP), string=']', start=(59, 17), end=(59, 18), line='rulename[RuleName]:\n')
Token(type=55 (OP), string=':', start=(59, 18), end=(59, 19), line='rulename[RuleName]:\n')
Token(type=4 (NEWLINE), string='\n', start=(59, 19), end=(59, 20), line='rulename[RuleName]:\n')
Token(type=5 (INDENT), string='    ', start=(60, 0), end=(60, 4), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=55 (OP), string='|', start=(60, 4), end=(60, 5), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=1 (NAME), string='NAME', start=(60, 6), end=(60, 10), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=1 (NAME), string='annotation', start=(60, 11), end=(60, 21), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=55 (OP), string='{', start=(60, 22), end=(60, 23), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=55 (OP), string='(', start=(60, 24), end=(60, 25), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=1 (NAME), string='name', start=(60, 25), end=(60, 29), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=55 (OP), string='.', start=(60, 29), end=(60, 30), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=1 (NAME), string='string', start=(60, 30), end=(60, 36), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=55 (OP), string=',', start=(60, 36), end=(60, 37), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=1 (NAME), string='annotation', start=(60, 38), end=(60, 48), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=55 (OP), string=')', start=(60, 48), end=(60, 49), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=55 (OP), string='}', start=(60, 50), end=(60, 51), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=4 (NEWLINE), string='\n', start=(60, 51), end=(60, 52), line='    | NAME annotation { (name.string, annotation) }\n')
Token(type=55 (OP), string='|', start=(61, 4), end=(61, 5), line='    | NAME { (name.string, None) }\n')
Token(type=1 (NAME), string='NAME', start=(61, 6), end=(61, 10), line='    | NAME { (name.string, None) }\n')
Token(type=55 (OP), string='{', start=(61, 11), end=(61, 12), line='    | NAME { (name.string, None) }\n')
Token(type=55 (OP), string='(', start=(61, 13), end=(61, 14), line='    | NAME { (name.string, None) }\n')
Token(type=1 (NAME), string='name', start=(61, 14), end=(61, 18), line='    | NAME { (name.string, None) }\n')
Token(type=55 (OP), string='.', start=(61, 18), end=(61, 19), line='    | NAME { (name.string, None) }\n')
Token(type=1 (NAME), string='string', start=(61, 19), end=(61, 25), line='    | NAME { (name.string, None) }\n')
Token(type=55 (OP), string=',', start=(61, 25), end=(61, 26), line='    | NAME { (name.string, None) }\n')
Token(type=1 (NAME), string='None', start=(61, 27), end=(61, 31), line='    | NAME { (name.string, None) }\n')
Token(type=55 (OP), string=')', start=(61, 31), end=(61, 32), line='    | NAME { (name.string, None) }\n')
Token(type=55 (OP), string='}', start=(61, 33), end=(61, 34), line='    | NAME { (name.string, None) }\n')
Token(type=4 (NEWLINE), string='\n', start=(61, 34), end=(61, 35), line='    | NAME { (name.string, None) }\n')
Token(type=65 (NL), string='\n', start=(62, 0), end=(62, 1), line='\n')
Token(type=64 (COMMENT), string='# In the future this may return something more complicated', start=(63, 0), end=(63, 58), line='# In the future this may return something more complicated\n')
Token(type=65 (NL), string='\n', start=(63, 58), end=(63, 59), line='# In the future this may return something more complicated\n')
Token(type=6 (DEDENT), string='', start=(64, 0), end=(64, 0), line='memoflag[str]:\n')
Token(type=1 (NAME), string='memoflag', start=(64, 0), end=(64, 8), line='memoflag[str]:\n')
Token(type=55 (OP), string='[', start=(64, 8), end=(64, 9), line='memoflag[str]:\n')
Token(type=1 (NAME), string='str', start=(64, 9), end=(64, 12), line='memoflag[str]:\n')
Token(type=55 (OP), string=']', start=(64, 12), end=(64, 13), line='memoflag[str]:\n')
Token(type=55 (OP), string=':', start=(64, 13), end=(64, 14), line='memoflag[str]:\n')
Token(type=4 (NEWLINE), string='\n', start=(64, 14), end=(64, 15), line='memoflag[str]:\n')
Token(type=5 (INDENT), string='    ', start=(65, 0), end=(65, 4), line='    | \'(\' "memo" \')\' { "memo" }\n')
Token(type=55 (OP), string='|', start=(65, 4), end=(65, 5), line='    | \'(\' "memo" \')\' { "memo" }\n')
Token(type=3 (STRING), string="'('", start=(65, 6), end=(65, 9), line='    | \'(\' "memo" \')\' { "memo" }\n')
Token(type=3 (STRING), string='"memo"', start=(65, 10), end=(65, 16), line='    | \'(\' "memo" \')\' { "memo" }\n')
Token(type=3 (STRING), string="')'", start=(65, 17), end=(65, 20), line='    | \'(\' "memo" \')\' { "memo" }\n')
Token(type=55 (OP), string='{', start=(65, 21), end=(65, 22), line='    | \'(\' "memo" \')\' { "memo" }\n')
Token(type=3 (STRING), string='"memo"', start=(65, 23), end=(65, 29), line='    | \'(\' "memo" \')\' { "memo" }\n')
Token(type=55 (OP), string='}', start=(65, 30), end=(65, 31), line='    | \'(\' "memo" \')\' { "memo" }\n')
Token(type=4 (NEWLINE), string='\n', start=(65, 31), end=(65, 32), line='    | \'(\' "memo" \')\' { "memo" }\n')
Token(type=65 (NL), string='\n', start=(66, 0), end=(66, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(67, 0), end=(67, 0), line='alts[Rhs]:\n')
Token(type=1 (NAME), string='alts', start=(67, 0), end=(67, 4), line='alts[Rhs]:\n')
Token(type=55 (OP), string='[', start=(67, 4), end=(67, 5), line='alts[Rhs]:\n')
Token(type=1 (NAME), string='Rhs', start=(67, 5), end=(67, 8), line='alts[Rhs]:\n')
Token(type=55 (OP), string=']', start=(67, 8), end=(67, 9), line='alts[Rhs]:\n')
Token(type=55 (OP), string=':', start=(67, 9), end=(67, 10), line='alts[Rhs]:\n')
Token(type=4 (NEWLINE), string='\n', start=(67, 10), end=(67, 11), line='alts[Rhs]:\n')
Token(type=5 (INDENT), string='    ', start=(68, 0), end=(68, 4), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=55 (OP), string='|', start=(68, 4), end=(68, 5), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=1 (NAME), string='alt', start=(68, 6), end=(68, 9), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=3 (STRING), string='"|"', start=(68, 10), end=(68, 13), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=1 (NAME), string='alts', start=(68, 14), end=(68, 18), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=55 (OP), string='{', start=(68, 19), end=(68, 20), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=1 (NAME), string='Rhs', start=(68, 21), end=(68, 24), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=55 (OP), string='(', start=(68, 24), end=(68, 25), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=55 (OP), string='[', start=(68, 25), end=(68, 26), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=1 (NAME), string='alt', start=(68, 26), end=(68, 29), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=55 (OP), string=']', start=(68, 29), end=(68, 30), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=55 (OP), string='+', start=(68, 31), end=(68, 32), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=1 (NAME), string='alts', start=(68, 33), end=(68, 37), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=55 (OP), string='.', start=(68, 37), end=(68, 38), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=1 (NAME), string='alts', start=(68, 38), end=(68, 42), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=55 (OP), string=')', start=(68, 42), end=(68, 43), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=55 (OP), string='}', start=(68, 43), end=(68, 44), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=4 (NEWLINE), string='\n', start=(68, 44), end=(68, 45), line='    | alt "|" alts { Rhs([alt] + alts.alts)}\n')
Token(type=55 (OP), string='|', start=(69, 4), end=(69, 5), line='    | alt { Rhs([alt]) }\n')
Token(type=1 (NAME), string='alt', start=(69, 6), end=(69, 9), line='    | alt { Rhs([alt]) }\n')
Token(type=55 (OP), string='{', start=(69, 10), end=(69, 11), line='    | alt { Rhs([alt]) }\n')
Token(type=1 (NAME), string='Rhs', start=(69, 12), end=(69, 15), line='    | alt { Rhs([alt]) }\n')
Token(type=55 (OP), string='(', start=(69, 15), end=(69, 16), line='    | alt { Rhs([alt]) }\n')
Token(type=55 (OP), string='[', start=(69, 16), end=(69, 17), line='    | alt { Rhs([alt]) }\n')
Token(type=1 (NAME), string='alt', start=(69, 17), end=(69, 20), line='    | alt { Rhs([alt]) }\n')
Token(type=55 (OP), string=']', start=(69, 20), end=(69, 21), line='    | alt { Rhs([alt]) }\n')
Token(type=55 (OP), string=')', start=(69, 21), end=(69, 22), line='    | alt { Rhs([alt]) }\n')
Token(type=55 (OP), string='}', start=(69, 23), end=(69, 24), line='    | alt { Rhs([alt]) }\n')
Token(type=4 (NEWLINE), string='\n', start=(69, 24), end=(69, 25), line='    | alt { Rhs([alt]) }\n')
Token(type=65 (NL), string='\n', start=(70, 0), end=(70, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(71, 0), end=(71, 0), line='more_alts[Rhs]:\n')
Token(type=1 (NAME), string='more_alts', start=(71, 0), end=(71, 9), line='more_alts[Rhs]:\n')
Token(type=55 (OP), string='[', start=(71, 9), end=(71, 10), line='more_alts[Rhs]:\n')
Token(type=1 (NAME), string='Rhs', start=(71, 10), end=(71, 13), line='more_alts[Rhs]:\n')
Token(type=55 (OP), string=']', start=(71, 13), end=(71, 14), line='more_alts[Rhs]:\n')
Token(type=55 (OP), string=':', start=(71, 14), end=(71, 15), line='more_alts[Rhs]:\n')
Token(type=4 (NEWLINE), string='\n', start=(71, 15), end=(71, 16), line='more_alts[Rhs]:\n')
Token(type=5 (INDENT), string='    ', start=(72, 0), end=(72, 4), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=55 (OP), string='|', start=(72, 4), end=(72, 5), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=3 (STRING), string='"|"', start=(72, 6), end=(72, 9), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=1 (NAME), string='alts', start=(72, 10), end=(72, 14), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=1 (NAME), string='NEWLINE', start=(72, 15), end=(72, 22), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=1 (NAME), string='more_alts', start=(72, 23), end=(72, 32), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=55 (OP), string='{', start=(72, 33), end=(72, 34), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=1 (NAME), string='Rhs', start=(72, 35), end=(72, 38), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=55 (OP), string='(', start=(72, 38), end=(72, 39), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=1 (NAME), string='alts', start=(72, 39), end=(72, 43), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=55 (OP), string='.', start=(72, 43), end=(72, 44), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=1 (NAME), string='alts', start=(72, 44), end=(72, 48), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=55 (OP), string='+', start=(72, 49), end=(72, 50), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=1 (NAME), string='more_alts', start=(72, 51), end=(72, 60), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=55 (OP), string='.', start=(72, 60), end=(72, 61), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=1 (NAME), string='alts', start=(72, 61), end=(72, 65), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=55 (OP), string=')', start=(72, 65), end=(72, 66), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=55 (OP), string='}', start=(72, 67), end=(72, 68), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=4 (NEWLINE), string='\n', start=(72, 68), end=(72, 69), line='    | "|" alts NEWLINE more_alts { Rhs(alts.alts + more_alts.alts) }\n')
Token(type=55 (OP), string='|', start=(73, 4), end=(73, 5), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=3 (STRING), string='"|"', start=(73, 6), end=(73, 9), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=1 (NAME), string='alts', start=(73, 10), end=(73, 14), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=1 (NAME), string='NEWLINE', start=(73, 15), end=(73, 22), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=55 (OP), string='{', start=(73, 23), end=(73, 24), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=1 (NAME), string='Rhs', start=(73, 25), end=(73, 28), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=55 (OP), string='(', start=(73, 28), end=(73, 29), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=1 (NAME), string='alts', start=(73, 29), end=(73, 33), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=55 (OP), string='.', start=(73, 33), end=(73, 34), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=1 (NAME), string='alts', start=(73, 34), end=(73, 38), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=55 (OP), string=')', start=(73, 38), end=(73, 39), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=55 (OP), string='}', start=(73, 40), end=(73, 41), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=4 (NEWLINE), string='\n', start=(73, 41), end=(73, 42), line='    | "|" alts NEWLINE { Rhs(alts.alts) }\n')
Token(type=65 (NL), string='\n', start=(74, 0), end=(74, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(75, 0), end=(75, 0), line='alt[Alt]:\n')
Token(type=1 (NAME), string='alt', start=(75, 0), end=(75, 3), line='alt[Alt]:\n')
Token(type=55 (OP), string='[', start=(75, 3), end=(75, 4), line='alt[Alt]:\n')
Token(type=1 (NAME), string='Alt', start=(75, 4), end=(75, 7), line='alt[Alt]:\n')
Token(type=55 (OP), string=']', start=(75, 7), end=(75, 8), line='alt[Alt]:\n')
Token(type=55 (OP), string=':', start=(75, 8), end=(75, 9), line='alt[Alt]:\n')
Token(type=4 (NEWLINE), string='\n', start=(75, 9), end=(75, 10), line='alt[Alt]:\n')
Token(type=5 (INDENT), string='    ', start=(76, 0), end=(76, 4), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string='|', start=(76, 4), end=(76, 5), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=1 (NAME), string='items', start=(76, 6), end=(76, 11), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=3 (STRING), string="'$'", start=(76, 12), end=(76, 15), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=1 (NAME), string='action', start=(76, 16), end=(76, 22), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string='{', start=(76, 23), end=(76, 24), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=1 (NAME), string='Alt', start=(76, 25), end=(76, 28), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string='(', start=(76, 28), end=(76, 29), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=1 (NAME), string='items', start=(76, 29), end=(76, 34), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string='+', start=(76, 35), end=(76, 36), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string='[', start=(76, 37), end=(76, 38), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=1 (NAME), string='NamedItem', start=(76, 38), end=(76, 47), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string='(', start=(76, 47), end=(76, 48), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=1 (NAME), string='None', start=(76, 48), end=(76, 52), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string=',', start=(76, 52), end=(76, 53), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=1 (NAME), string='NameLeaf', start=(76, 54), end=(76, 62), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string='(', start=(76, 62), end=(76, 63), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=3 (STRING), string="'ENDMARKER'", start=(76, 63), end=(76, 74), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string=')', start=(76, 74), end=(76, 75), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string=')', start=(76, 75), end=(76, 76), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string=']', start=(76, 76), end=(76, 77), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string=',', start=(76, 77), end=(76, 78), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=1 (NAME), string='action', start=(76, 79), end=(76, 85), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string='=', start=(76, 85), end=(76, 86), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=1 (NAME), string='action', start=(76, 86), end=(76, 92), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string=')', start=(76, 92), end=(76, 93), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string='}', start=(76, 94), end=(76, 95), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=4 (NEWLINE), string='\n', start=(76, 95), end=(76, 96), line="    | items '$' action { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=action) }\n")
Token(type=55 (OP), string='|', start=(77, 4), end=(77, 5), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=1 (NAME), string='items', start=(77, 6), end=(77, 11), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=3 (STRING), string="'$'", start=(77, 12), end=(77, 15), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string='{', start=(77, 16), end=(77, 17), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=1 (NAME), string='Alt', start=(77, 18), end=(77, 21), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string='(', start=(77, 21), end=(77, 22), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=1 (NAME), string='items', start=(77, 22), end=(77, 27), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string='+', start=(77, 28), end=(77, 29), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string='[', start=(77, 30), end=(77, 31), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=1 (NAME), string='NamedItem', start=(77, 31), end=(77, 40), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string='(', start=(77, 40), end=(77, 41), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=1 (NAME), string='None', start=(77, 41), end=(77, 45), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string=',', start=(77, 45), end=(77, 46), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=1 (NAME), string='NameLeaf', start=(77, 47), end=(77, 55), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string='(', start=(77, 55), end=(77, 56), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=3 (STRING), string="'ENDMARKER'", start=(77, 56), end=(77, 67), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string=')', start=(77, 67), end=(77, 68), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string=')', start=(77, 68), end=(77, 69), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string=']', start=(77, 69), end=(77, 70), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string=',', start=(77, 70), end=(77, 71), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=1 (NAME), string='action', start=(77, 72), end=(77, 78), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string='=', start=(77, 78), end=(77, 79), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=1 (NAME), string='None', start=(77, 79), end=(77, 83), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string=')', start=(77, 83), end=(77, 84), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string='}', start=(77, 85), end=(77, 86), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=4 (NEWLINE), string='\n', start=(77, 86), end=(77, 87), line="    | items '$' { Alt(items + [NamedItem(None, NameLeaf('ENDMARKER'))], action=None) }\n")
Token(type=55 (OP), string='|', start=(78, 4), end=(78, 5), line='    | items action { Alt(items, action=action) }\n')
Token(type=1 (NAME), string='items', start=(78, 6), end=(78, 11), line='    | items action { Alt(items, action=action) }\n')
Token(type=1 (NAME), string='action', start=(78, 12), end=(78, 18), line='    | items action { Alt(items, action=action) }\n')
Token(type=55 (OP), string='{', start=(78, 19), end=(78, 20), line='    | items action { Alt(items, action=action) }\n')
Token(type=1 (NAME), string='Alt', start=(78, 21), end=(78, 24), line='    | items action { Alt(items, action=action) }\n')
Token(type=55 (OP), string='(', start=(78, 24), end=(78, 25), line='    | items action { Alt(items, action=action) }\n')
Token(type=1 (NAME), string='items', start=(78, 25), end=(78, 30), line='    | items action { Alt(items, action=action) }\n')
Token(type=55 (OP), string=',', start=(78, 30), end=(78, 31), line='    | items action { Alt(items, action=action) }\n')
Token(type=1 (NAME), string='action', start=(78, 32), end=(78, 38), line='    | items action { Alt(items, action=action) }\n')
Token(type=55 (OP), string='=', start=(78, 38), end=(78, 39), line='    | items action { Alt(items, action=action) }\n')
Token(type=1 (NAME), string='action', start=(78, 39), end=(78, 45), line='    | items action { Alt(items, action=action) }\n')
Token(type=55 (OP), string=')', start=(78, 45), end=(78, 46), line='    | items action { Alt(items, action=action) }\n')
Token(type=55 (OP), string='}', start=(78, 47), end=(78, 48), line='    | items action { Alt(items, action=action) }\n')
Token(type=4 (NEWLINE), string='\n', start=(78, 48), end=(78, 49), line='    | items action { Alt(items, action=action) }\n')
Token(type=55 (OP), string='|', start=(79, 4), end=(79, 5), line='    | items { Alt(items, action=None) }\n')
Token(type=1 (NAME), string='items', start=(79, 6), end=(79, 11), line='    | items { Alt(items, action=None) }\n')
Token(type=55 (OP), string='{', start=(79, 12), end=(79, 13), line='    | items { Alt(items, action=None) }\n')
Token(type=1 (NAME), string='Alt', start=(79, 14), end=(79, 17), line='    | items { Alt(items, action=None) }\n')
Token(type=55 (OP), string='(', start=(79, 17), end=(79, 18), line='    | items { Alt(items, action=None) }\n')
Token(type=1 (NAME), string='items', start=(79, 18), end=(79, 23), line='    | items { Alt(items, action=None) }\n')
Token(type=55 (OP), string=',', start=(79, 23), end=(79, 24), line='    | items { Alt(items, action=None) }\n')
Token(type=1 (NAME), string='action', start=(79, 25), end=(79, 31), line='    | items { Alt(items, action=None) }\n')
Token(type=55 (OP), string='=', start=(79, 31), end=(79, 32), line='    | items { Alt(items, action=None) }\n')
Token(type=1 (NAME), string='None', start=(79, 32), end=(79, 36), line='    | items { Alt(items, action=None) }\n')
Token(type=55 (OP), string=')', start=(79, 36), end=(79, 37), line='    | items { Alt(items, action=None) }\n')
Token(type=55 (OP), string='}', start=(79, 38), end=(79, 39), line='    | items { Alt(items, action=None) }\n')
Token(type=4 (NEWLINE), string='\n', start=(79, 39), end=(79, 40), line='    | items { Alt(items, action=None) }\n')
Token(type=65 (NL), string='\n', start=(80, 0), end=(80, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(81, 0), end=(81, 0), line='items[NamedItemList]:\n')
Token(type=1 (NAME), string='items', start=(81, 0), end=(81, 5), line='items[NamedItemList]:\n')
Token(type=55 (OP), string='[', start=(81, 5), end=(81, 6), line='items[NamedItemList]:\n')
Token(type=1 (NAME), string='NamedItemList', start=(81, 6), end=(81, 19), line='items[NamedItemList]:\n')
Token(type=55 (OP), string=']', start=(81, 19), end=(81, 20), line='items[NamedItemList]:\n')
Token(type=55 (OP), string=':', start=(81, 20), end=(81, 21), line='items[NamedItemList]:\n')
Token(type=4 (NEWLINE), string='\n', start=(81, 21), end=(81, 22), line='items[NamedItemList]:\n')
Token(type=5 (INDENT), string='    ', start=(82, 0), end=(82, 4), line='    | named_item items { [named_item] + items }\n')
Token(type=55 (OP), string='|', start=(82, 4), end=(82, 5), line='    | named_item items { [named_item] + items }\n')
Token(type=1 (NAME), string='named_item', start=(82, 6), end=(82, 16), line='    | named_item items { [named_item] + items }\n')
Token(type=1 (NAME), string='items', start=(82, 17), end=(82, 22), line='    | named_item items { [named_item] + items }\n')
Token(type=55 (OP), string='{', start=(82, 23), end=(82, 24), line='    | named_item items { [named_item] + items }\n')
Token(type=55 (OP), string='[', start=(82, 25), end=(82, 26), line='    | named_item items { [named_item] + items }\n')
Token(type=1 (NAME), string='named_item', start=(82, 26), end=(82, 36), line='    | named_item items { [named_item] + items }\n')
Token(type=55 (OP), string=']', start=(82, 36), end=(82, 37), line='    | named_item items { [named_item] + items }\n')
Token(type=55 (OP), string='+', start=(82, 38), end=(82, 39), line='    | named_item items { [named_item] + items }\n')
Token(type=1 (NAME), string='items', start=(82, 40), end=(82, 45), line='    | named_item items { [named_item] + items }\n')
Token(type=55 (OP), string='}', start=(82, 46), end=(82, 47), line='    | named_item items { [named_item] + items }\n')
Token(type=4 (NEWLINE), string='\n', start=(82, 47), end=(82, 48), line='    | named_item items { [named_item] + items }\n')
Token(type=55 (OP), string='|', start=(83, 4), end=(83, 5), line='    | named_item { [named_item] }\n')
Token(type=1 (NAME), string='named_item', start=(83, 6), end=(83, 16), line='    | named_item { [named_item] }\n')
Token(type=55 (OP), string='{', start=(83, 17), end=(83, 18), line='    | named_item { [named_item] }\n')
Token(type=55 (OP), string='[', start=(83, 19), end=(83, 20), line='    | named_item { [named_item] }\n')
Token(type=1 (NAME), string='named_item', start=(83, 20), end=(83, 30), line='    | named_item { [named_item] }\n')
Token(type=55 (OP), string=']', start=(83, 30), end=(83, 31), line='    | named_item { [named_item] }\n')
Token(type=55 (OP), string='}', start=(83, 32), end=(83, 33), line='    | named_item { [named_item] }\n')
Token(type=4 (NEWLINE), string='\n', start=(83, 33), end=(83, 34), line='    | named_item { [named_item] }\n')
Token(type=65 (NL), string='\n', start=(84, 0), end=(84, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(85, 0), end=(85, 0), line='named_item[NamedItem]:\n')
Token(type=1 (NAME), string='named_item', start=(85, 0), end=(85, 10), line='named_item[NamedItem]:\n')
Token(type=55 (OP), string='[', start=(85, 10), end=(85, 11), line='named_item[NamedItem]:\n')
Token(type=1 (NAME), string='NamedItem', start=(85, 11), end=(85, 20), line='named_item[NamedItem]:\n')
Token(type=55 (OP), string=']', start=(85, 20), end=(85, 21), line='named_item[NamedItem]:\n')
Token(type=55 (OP), string=':', start=(85, 21), end=(85, 22), line='named_item[NamedItem]:\n')
Token(type=4 (NEWLINE), string='\n', start=(85, 22), end=(85, 23), line='named_item[NamedItem]:\n')
Token(type=5 (INDENT), string='    ', start=(86, 0), end=(86, 4), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=55 (OP), string='|', start=(86, 4), end=(86, 5), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=1 (NAME), string='NAME', start=(86, 6), end=(86, 10), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=1 (NAME), string='annotation', start=(86, 11), end=(86, 21), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=3 (STRING), string="'='", start=(86, 22), end=(86, 25), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=55 (OP), string='~', start=(86, 26), end=(86, 27), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=1 (NAME), string='item', start=(86, 28), end=(86, 32), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=55 (OP), string='{', start=(86, 33), end=(86, 34), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=1 (NAME), string='NamedItem', start=(86, 34), end=(86, 43), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=55 (OP), string='(', start=(86, 43), end=(86, 44), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=1 (NAME), string='name', start=(86, 44), end=(86, 48), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=55 (OP), string='.', start=(86, 48), end=(86, 49), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=1 (NAME), string='string', start=(86, 49), end=(86, 55), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=55 (OP), string=',', start=(86, 55), end=(86, 56), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=1 (NAME), string='item', start=(86, 57), end=(86, 61), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=55 (OP), string=',', start=(86, 61), end=(86, 62), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=1 (NAME), string='annotation', start=(86, 63), end=(86, 73), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=55 (OP), string=')', start=(86, 73), end=(86, 74), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=55 (OP), string='}', start=(86, 74), end=(86, 75), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=4 (NEWLINE), string='\n', start=(86, 75), end=(86, 76), line="    | NAME annotation '=' ~ item {NamedItem(name.string, item, annotation)}\n")
Token(type=55 (OP), string='|', start=(87, 4), end=(87, 5), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=1 (NAME), string='NAME', start=(87, 6), end=(87, 10), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=3 (STRING), string="'='", start=(87, 11), end=(87, 14), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=55 (OP), string='~', start=(87, 15), end=(87, 16), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=1 (NAME), string='item', start=(87, 17), end=(87, 21), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=55 (OP), string='{', start=(87, 22), end=(87, 23), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=1 (NAME), string='NamedItem', start=(87, 23), end=(87, 32), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=55 (OP), string='(', start=(87, 32), end=(87, 33), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=1 (NAME), string='name', start=(87, 33), end=(87, 37), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=55 (OP), string='.', start=(87, 37), end=(87, 38), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=1 (NAME), string='string', start=(87, 38), end=(87, 44), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=55 (OP), string=',', start=(87, 44), end=(87, 45), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=1 (NAME), string='item', start=(87, 46), end=(87, 50), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=55 (OP), string=')', start=(87, 50), end=(87, 51), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=55 (OP), string='}', start=(87, 51), end=(87, 52), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=4 (NEWLINE), string='\n', start=(87, 52), end=(87, 53), line="    | NAME '=' ~ item {NamedItem(name.string, item)}\n")
Token(type=55 (OP), string='|', start=(88, 4), end=(88, 5), line='    | item {NamedItem(None, item)}\n')
Token(type=1 (NAME), string='item', start=(88, 6), end=(88, 10), line='    | item {NamedItem(None, item)}\n')
Token(type=55 (OP), string='{', start=(88, 11), end=(88, 12), line='    | item {NamedItem(None, item)}\n')
Token(type=1 (NAME), string='NamedItem', start=(88, 12), end=(88, 21), line='    | item {NamedItem(None, item)}\n')
Token(type=55 (OP), string='(', start=(88, 21), end=(88, 22), line='    | item {NamedItem(None, item)}\n')
Token(type=1 (NAME), string='None', start=(88, 22), end=(88, 26), line='    | item {NamedItem(None, item)}\n')
Token(type=55 (OP), string=',', start=(88, 26), end=(88, 27), line='    | item {NamedItem(None, item)}\n')
Token(type=1 (NAME), string='item', start=(88, 28), end=(88, 32), line='    | item {NamedItem(None, item)}\n')
Token(type=55 (OP), string=')', start=(88, 32), end=(88, 33), line='    | item {NamedItem(None, item)}\n')
Token(type=55 (OP), string='}', start=(88, 33), end=(88, 34), line='    | item {NamedItem(None, item)}\n')
Token(type=4 (NEWLINE), string='\n', start=(88, 34), end=(88, 35), line='    | item {NamedItem(None, item)}\n')
Token(type=55 (OP), string='|', start=(89, 4), end=(89, 5), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=1 (NAME), string='forced', start=(89, 6), end=(89, 12), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=55 (OP), string='=', start=(89, 12), end=(89, 13), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=1 (NAME), string='forced_atom', start=(89, 13), end=(89, 24), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=55 (OP), string='{', start=(89, 25), end=(89, 26), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=1 (NAME), string='NamedItem', start=(89, 26), end=(89, 35), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=55 (OP), string='(', start=(89, 35), end=(89, 36), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=1 (NAME), string='None', start=(89, 36), end=(89, 40), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=55 (OP), string=',', start=(89, 40), end=(89, 41), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=1 (NAME), string='forced', start=(89, 42), end=(89, 48), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=55 (OP), string=')', start=(89, 48), end=(89, 49), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=55 (OP), string='}', start=(89, 49), end=(89, 50), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=4 (NEWLINE), string='\n', start=(89, 50), end=(89, 51), line='    | forced=forced_atom {NamedItem(None, forced)}\n')
Token(type=55 (OP), string='|', start=(90, 4), end=(90, 5), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=1 (NAME), string='it', start=(90, 6), end=(90, 8), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=55 (OP), string='=', start=(90, 8), end=(90, 9), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=1 (NAME), string='lookahead', start=(90, 9), end=(90, 18), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=55 (OP), string='{', start=(90, 19), end=(90, 20), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=1 (NAME), string='NamedItem', start=(90, 20), end=(90, 29), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=55 (OP), string='(', start=(90, 29), end=(90, 30), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=1 (NAME), string='None', start=(90, 30), end=(90, 34), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=55 (OP), string=',', start=(90, 34), end=(90, 35), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=1 (NAME), string='it', start=(90, 36), end=(90, 38), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=55 (OP), string=')', start=(90, 38), end=(90, 39), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=55 (OP), string='}', start=(90, 39), end=(90, 40), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=4 (NEWLINE), string='\n', start=(90, 40), end=(90, 41), line='    | it=lookahead {NamedItem(None, it)}\n')
Token(type=65 (NL), string='\n', start=(91, 0), end=(91, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(92, 0), end=(92, 0), line='forced_atom[Forced]:\n')
Token(type=1 (NAME), string='forced_atom', start=(92, 0), end=(92, 11), line='forced_atom[Forced]:\n')
Token(type=55 (OP), string='[', start=(92, 11), end=(92, 12), line='forced_atom[Forced]:\n')
Token(type=1 (NAME), string='Forced', start=(92, 12), end=(92, 18), line='forced_atom[Forced]:\n')
Token(type=55 (OP), string=']', start=(92, 18), end=(92, 19), line='forced_atom[Forced]:\n')
Token(type=55 (OP), string=':', start=(92, 19), end=(92, 20), line='forced_atom[Forced]:\n')
Token(type=4 (NEWLINE), string='\n', start=(92, 20), end=(92, 21), line='forced_atom[Forced]:\n')
Token(type=5 (INDENT), string='    ', start=(93, 0), end=(93, 4), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=55 (OP), string='|', start=(93, 4), end=(93, 5), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=3 (STRING), string="'&'", start=(93, 6), end=(93, 9), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=3 (STRING), string="'&'", start=(93, 9), end=(93, 12), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=55 (OP), string='~', start=(93, 13), end=(93, 14), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=1 (NAME), string='atom', start=(93, 15), end=(93, 19), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=55 (OP), string='{', start=(93, 20), end=(93, 21), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=1 (NAME), string='Forced', start=(93, 21), end=(93, 27), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=55 (OP), string='(', start=(93, 27), end=(93, 28), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=1 (NAME), string='atom', start=(93, 28), end=(93, 32), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=55 (OP), string=')', start=(93, 32), end=(93, 33), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=55 (OP), string='}', start=(93, 33), end=(93, 34), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=4 (NEWLINE), string='\n', start=(93, 34), end=(93, 35), line="    | '&''&' ~ atom {Forced(atom)}\n")
Token(type=65 (NL), string='\n', start=(94, 0), end=(94, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(95, 0), end=(95, 0), line='lookahead[LookaheadOrCut]:\n')
Token(type=1 (NAME), string='lookahead', start=(95, 0), end=(95, 9), line='lookahead[LookaheadOrCut]:\n')
Token(type=55 (OP), string='[', start=(95, 9), end=(95, 10), line='lookahead[LookaheadOrCut]:\n')
Token(type=1 (NAME), string='LookaheadOrCut', start=(95, 10), end=(95, 24), line='lookahead[LookaheadOrCut]:\n')
Token(type=55 (OP), string=']', start=(95, 24), end=(95, 25), line='lookahead[LookaheadOrCut]:\n')
Token(type=55 (OP), string=':', start=(95, 25), end=(95, 26), line='lookahead[LookaheadOrCut]:\n')
Token(type=4 (NEWLINE), string='\n', start=(95, 26), end=(95, 27), line='lookahead[LookaheadOrCut]:\n')
Token(type=5 (INDENT), string='    ', start=(96, 0), end=(96, 4), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=55 (OP), string='|', start=(96, 4), end=(96, 5), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=3 (STRING), string="'&'", start=(96, 6), end=(96, 9), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=55 (OP), string='~', start=(96, 10), end=(96, 11), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=1 (NAME), string='atom', start=(96, 12), end=(96, 16), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=55 (OP), string='{', start=(96, 17), end=(96, 18), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=1 (NAME), string='PositiveLookahead', start=(96, 18), end=(96, 35), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=55 (OP), string='(', start=(96, 35), end=(96, 36), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=1 (NAME), string='atom', start=(96, 36), end=(96, 40), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=55 (OP), string=')', start=(96, 40), end=(96, 41), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=55 (OP), string='}', start=(96, 41), end=(96, 42), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=4 (NEWLINE), string='\n', start=(96, 42), end=(96, 43), line="    | '&' ~ atom {PositiveLookahead(atom)}\n")
Token(type=55 (OP), string='|', start=(97, 4), end=(97, 5), line="    | '!' ~ atom {NegativeLookahead(atom)}\n")
Token(type=3 (STRING), string="'!'", start=(97, 6), end=(97, 9), line="    | '!' ~ atom {NegativeLookahead(atom)}\n")
Token(type=55 (OP), string='~', start=(97, 10), end=(97, 11), line="    | '!' ~ atom {NegativeLookahead(atom)}\n")
Token(type=1 (NAME), string='atom', start=(97, 12), end=(97, 16), line="    | '!' ~ atom {NegativeLookahead(atom)}\n")
Token(type=55 (OP), string='{', start=(97, 17), end=(97, 18), line="    | '!' ~ atom {NegativeLookahead(atom)}\n")
Token(type=1 (NAME), string='NegativeLookahead', start=(97, 18), end=(97, 35), line="    | '!' ~ atom {NegativeLookahead(atom)}\n")
Token(type=55 (OP), string='(', start=(97, 35), end=(97, 36), line="    | '!' ~ atom {NegativeLookahead(atom)}\n")
Token(type=1 (NAME), string='atom', start=(97, 36), end=(97, 40), line="    | '!' ~ atom {NegativeLookahead(atom)}\n")
Token(type=55 (OP), string=')', start=(97, 40), end=(97, 41), line="    | '!' ~ atom {NegativeLookahead(atom)}\n")
Token(type=55 (OP), string='}', start=(97, 41), end=(97, 42), line="    | '!' ~ atom {NegativeLookahead(atom)}\n")
Token(type=4 (NEWLINE), string='\n', start=(97, 42), end=(97, 43), line="    | '!' ~ atom {NegativeLookahead(atom)}\n")
Token(type=55 (OP), string='|', start=(98, 4), end=(98, 5), line="    | '~' {Cut()}\n")
Token(type=3 (STRING), string="'~'", start=(98, 6), end=(98, 9), line="    | '~' {Cut()}\n")
Token(type=55 (OP), string='{', start=(98, 10), end=(98, 11), line="    | '~' {Cut()}\n")
Token(type=1 (NAME), string='Cut', start=(98, 11), end=(98, 14), line="    | '~' {Cut()}\n")
Token(type=55 (OP), string='(', start=(98, 14), end=(98, 15), line="    | '~' {Cut()}\n")
Token(type=55 (OP), string=')', start=(98, 15), end=(98, 16), line="    | '~' {Cut()}\n")
Token(type=55 (OP), string='}', start=(98, 16), end=(98, 17), line="    | '~' {Cut()}\n")
Token(type=4 (NEWLINE), string='\n', start=(98, 17), end=(98, 18), line="    | '~' {Cut()}\n")
Token(type=65 (NL), string='\n', start=(99, 0), end=(99, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(100, 0), end=(100, 0), line='item[Item]:\n')
Token(type=1 (NAME), string='item', start=(100, 0), end=(100, 4), line='item[Item]:\n')
Token(type=55 (OP), string='[', start=(100, 4), end=(100, 5), line='item[Item]:\n')
Token(type=1 (NAME), string='Item', start=(100, 5), end=(100, 9), line='item[Item]:\n')
Token(type=55 (OP), string=']', start=(100, 9), end=(100, 10), line='item[Item]:\n')
Token(type=55 (OP), string=':', start=(100, 10), end=(100, 11), line='item[Item]:\n')
Token(type=4 (NEWLINE), string='\n', start=(100, 11), end=(100, 12), line='item[Item]:\n')
Token(type=5 (INDENT), string='    ', start=(101, 0), end=(101, 4), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=55 (OP), string='|', start=(101, 4), end=(101, 5), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=3 (STRING), string="'['", start=(101, 6), end=(101, 9), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=55 (OP), string='~', start=(101, 10), end=(101, 11), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=1 (NAME), string='alts', start=(101, 12), end=(101, 16), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=3 (STRING), string="']'", start=(101, 17), end=(101, 20), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=55 (OP), string='{', start=(101, 21), end=(101, 22), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=1 (NAME), string='Opt', start=(101, 22), end=(101, 25), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=55 (OP), string='(', start=(101, 25), end=(101, 26), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=1 (NAME), string='alts', start=(101, 26), end=(101, 30), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=55 (OP), string=')', start=(101, 30), end=(101, 31), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=55 (OP), string='}', start=(101, 31), end=(101, 32), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=4 (NEWLINE), string='\n', start=(101, 32), end=(101, 33), line="    | '[' ~ alts ']' {Opt(alts)}\n")
Token(type=55 (OP), string='|', start=(102, 4), end=(102, 5), line="    |  atom '?' {Opt(atom)}\n")
Token(type=1 (NAME), string='atom', start=(102, 7), end=(102, 11), line="    |  atom '?' {Opt(atom)}\n")
Token(type=3 (STRING), string="'?'", start=(102, 12), end=(102, 15), line="    |  atom '?' {Opt(atom)}\n")
Token(type=55 (OP), string='{', start=(102, 16), end=(102, 17), line="    |  atom '?' {Opt(atom)}\n")
Token(type=1 (NAME), string='Opt', start=(102, 17), end=(102, 20), line="    |  atom '?' {Opt(atom)}\n")
Token(type=55 (OP), string='(', start=(102, 20), end=(102, 21), line="    |  atom '?' {Opt(atom)}\n")
Token(type=1 (NAME), string='atom', start=(102, 21), end=(102, 25), line="    |  atom '?' {Opt(atom)}\n")
Token(type=55 (OP), string=')', start=(102, 25), end=(102, 26), line="    |  atom '?' {Opt(atom)}\n")
Token(type=55 (OP), string='}', start=(102, 26), end=(102, 27), line="    |  atom '?' {Opt(atom)}\n")
Token(type=4 (NEWLINE), string='\n', start=(102, 27), end=(102, 28), line="    |  atom '?' {Opt(atom)}\n")
Token(type=55 (OP), string='|', start=(103, 4), end=(103, 5), line="    |  atom '*' {Repeat0(atom)}\n")
Token(type=1 (NAME), string='atom', start=(103, 7), end=(103, 11), line="    |  atom '*' {Repeat0(atom)}\n")
Token(type=3 (STRING), string="'*'", start=(103, 12), end=(103, 15), line="    |  atom '*' {Repeat0(atom)}\n")
Token(type=55 (OP), string='{', start=(103, 16), end=(103, 17), line="    |  atom '*' {Repeat0(atom)}\n")
Token(type=1 (NAME), string='Repeat0', start=(103, 17), end=(103, 24), line="    |  atom '*' {Repeat0(atom)}\n")
Token(type=55 (OP), string='(', start=(103, 24), end=(103, 25), line="    |  atom '*' {Repeat0(atom)}\n")
Token(type=1 (NAME), string='atom', start=(103, 25), end=(103, 29), line="    |  atom '*' {Repeat0(atom)}\n")
Token(type=55 (OP), string=')', start=(103, 29), end=(103, 30), line="    |  atom '*' {Repeat0(atom)}\n")
Token(type=55 (OP), string='}', start=(103, 30), end=(103, 31), line="    |  atom '*' {Repeat0(atom)}\n")
Token(type=4 (NEWLINE), string='\n', start=(103, 31), end=(103, 32), line="    |  atom '*' {Repeat0(atom)}\n")
Token(type=55 (OP), string='|', start=(104, 4), end=(104, 5), line="    |  atom '+' {Repeat1(atom)}\n")
Token(type=1 (NAME), string='atom', start=(104, 7), end=(104, 11), line="    |  atom '+' {Repeat1(atom)}\n")
Token(type=3 (STRING), string="'+'", start=(104, 12), end=(104, 15), line="    |  atom '+' {Repeat1(atom)}\n")
Token(type=55 (OP), string='{', start=(104, 16), end=(104, 17), line="    |  atom '+' {Repeat1(atom)}\n")
Token(type=1 (NAME), string='Repeat1', start=(104, 17), end=(104, 24), line="    |  atom '+' {Repeat1(atom)}\n")
Token(type=55 (OP), string='(', start=(104, 24), end=(104, 25), line="    |  atom '+' {Repeat1(atom)}\n")
Token(type=1 (NAME), string='atom', start=(104, 25), end=(104, 29), line="    |  atom '+' {Repeat1(atom)}\n")
Token(type=55 (OP), string=')', start=(104, 29), end=(104, 30), line="    |  atom '+' {Repeat1(atom)}\n")
Token(type=55 (OP), string='}', start=(104, 30), end=(104, 31), line="    |  atom '+' {Repeat1(atom)}\n")
Token(type=4 (NEWLINE), string='\n', start=(104, 31), end=(104, 32), line="    |  atom '+' {Repeat1(atom)}\n")
Token(type=55 (OP), string='|', start=(105, 4), end=(105, 5), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=1 (NAME), string='sep', start=(105, 7), end=(105, 10), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=55 (OP), string='=', start=(105, 10), end=(105, 11), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=1 (NAME), string='atom', start=(105, 11), end=(105, 15), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=3 (STRING), string="'.'", start=(105, 16), end=(105, 19), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=1 (NAME), string='node', start=(105, 20), end=(105, 24), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=55 (OP), string='=', start=(105, 24), end=(105, 25), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=1 (NAME), string='atom', start=(105, 25), end=(105, 29), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=3 (STRING), string="'+'", start=(105, 30), end=(105, 33), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=55 (OP), string='{', start=(105, 34), end=(105, 35), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=1 (NAME), string='Gather', start=(105, 35), end=(105, 41), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=55 (OP), string='(', start=(105, 41), end=(105, 42), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=1 (NAME), string='sep', start=(105, 42), end=(105, 45), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=55 (OP), string=',', start=(105, 45), end=(105, 46), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=1 (NAME), string='node', start=(105, 47), end=(105, 51), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=55 (OP), string=')', start=(105, 51), end=(105, 52), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=55 (OP), string='}', start=(105, 52), end=(105, 53), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=4 (NEWLINE), string='\n', start=(105, 53), end=(105, 54), line="    |  sep=atom '.' node=atom '+' {Gather(sep, node)}\n")
Token(type=55 (OP), string='|', start=(106, 4), end=(106, 5), line='    |  atom {atom}\n')
Token(type=1 (NAME), string='atom', start=(106, 7), end=(106, 11), line='    |  atom {atom}\n')
Token(type=55 (OP), string='{', start=(106, 12), end=(106, 13), line='    |  atom {atom}\n')
Token(type=1 (NAME), string='atom', start=(106, 13), end=(106, 17), line='    |  atom {atom}\n')
Token(type=55 (OP), string='}', start=(106, 17), end=(106, 18), line='    |  atom {atom}\n')
Token(type=4 (NEWLINE), string='\n', start=(106, 18), end=(106, 19), line='    |  atom {atom}\n')
Token(type=65 (NL), string='\n', start=(107, 0), end=(107, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(108, 0), end=(108, 0), line='atom[Plain]:\n')
Token(type=1 (NAME), string='atom', start=(108, 0), end=(108, 4), line='atom[Plain]:\n')
Token(type=55 (OP), string='[', start=(108, 4), end=(108, 5), line='atom[Plain]:\n')
Token(type=1 (NAME), string='Plain', start=(108, 5), end=(108, 10), line='atom[Plain]:\n')
Token(type=55 (OP), string=']', start=(108, 10), end=(108, 11), line='atom[Plain]:\n')
Token(type=55 (OP), string=':', start=(108, 11), end=(108, 12), line='atom[Plain]:\n')
Token(type=4 (NEWLINE), string='\n', start=(108, 12), end=(108, 13), line='atom[Plain]:\n')
Token(type=5 (INDENT), string='    ', start=(109, 0), end=(109, 4), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=55 (OP), string='|', start=(109, 4), end=(109, 5), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=3 (STRING), string="'('", start=(109, 6), end=(109, 9), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=55 (OP), string='~', start=(109, 10), end=(109, 11), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=1 (NAME), string='alts', start=(109, 12), end=(109, 16), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=3 (STRING), string="')'", start=(109, 17), end=(109, 20), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=55 (OP), string='{', start=(109, 21), end=(109, 22), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=1 (NAME), string='Group', start=(109, 22), end=(109, 27), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=55 (OP), string='(', start=(109, 27), end=(109, 28), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=1 (NAME), string='alts', start=(109, 28), end=(109, 32), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=55 (OP), string=')', start=(109, 32), end=(109, 33), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=55 (OP), string='}', start=(109, 33), end=(109, 34), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=4 (NEWLINE), string='\n', start=(109, 34), end=(109, 35), line="    | '(' ~ alts ')' {Group(alts)}\n")
Token(type=55 (OP), string='|', start=(110, 4), end=(110, 5), line='    | NAME {NameLeaf(name.string) }\n')
Token(type=1 (NAME), string='NAME', start=(110, 6), end=(110, 10), line='    | NAME {NameLeaf(name.string) }\n')
Token(type=55 (OP), string='{', start=(110, 11), end=(110, 12), line='    | NAME {NameLeaf(name.string) }\n')
Token(type=1 (NAME), string='NameLeaf', start=(110, 12), end=(110, 20), line='    | NAME {NameLeaf(name.string) }\n')
Token(type=55 (OP), string='(', start=(110, 20), end=(110, 21), line='    | NAME {NameLeaf(name.string) }\n')
Token(type=1 (NAME), string='name', start=(110, 21), end=(110, 25), line='    | NAME {NameLeaf(name.string) }\n')
Token(type=55 (OP), string='.', start=(110, 25), end=(110, 26), line='    | NAME {NameLeaf(name.string) }\n')
Token(type=1 (NAME), string='string', start=(110, 26), end=(110, 32), line='    | NAME {NameLeaf(name.string) }\n')
Token(type=55 (OP), string=')', start=(110, 32), end=(110, 33), line='    | NAME {NameLeaf(name.string) }\n')
Token(type=55 (OP), string='}', start=(110, 34), end=(110, 35), line='    | NAME {NameLeaf(name.string) }\n')
Token(type=4 (NEWLINE), string='\n', start=(110, 35), end=(110, 36), line='    | NAME {NameLeaf(name.string) }\n')
Token(type=55 (OP), string='|', start=(111, 4), end=(111, 5), line='    | STRING {StringLeaf(string.string)}\n')
Token(type=1 (NAME), string='STRING', start=(111, 6), end=(111, 12), line='    | STRING {StringLeaf(string.string)}\n')
Token(type=55 (OP), string='{', start=(111, 13), end=(111, 14), line='    | STRING {StringLeaf(string.string)}\n')
Token(type=1 (NAME), string='StringLeaf', start=(111, 14), end=(111, 24), line='    | STRING {StringLeaf(string.string)}\n')
Token(type=55 (OP), string='(', start=(111, 24), end=(111, 25), line='    | STRING {StringLeaf(string.string)}\n')
Token(type=1 (NAME), string='string', start=(111, 25), end=(111, 31), line='    | STRING {StringLeaf(string.string)}\n')
Token(type=55 (OP), string='.', start=(111, 31), end=(111, 32), line='    | STRING {StringLeaf(string.string)}\n')
Token(type=1 (NAME), string='string', start=(111, 32), end=(111, 38), line='    | STRING {StringLeaf(string.string)}\n')
Token(type=55 (OP), string=')', start=(111, 38), end=(111, 39), line='    | STRING {StringLeaf(string.string)}\n')
Token(type=55 (OP), string='}', start=(111, 39), end=(111, 40), line='    | STRING {StringLeaf(string.string)}\n')
Token(type=4 (NEWLINE), string='\n', start=(111, 40), end=(111, 41), line='    | STRING {StringLeaf(string.string)}\n')
Token(type=65 (NL), string='\n', start=(112, 0), end=(112, 1), line='\n')
Token(type=64 (COMMENT), string='# Mini-grammar for the actions and annotations', start=(113, 0), end=(113, 46), line='# Mini-grammar for the actions and annotations\n')
Token(type=65 (NL), string='\n', start=(113, 46), end=(113, 47), line='# Mini-grammar for the actions and annotations\n')
Token(type=65 (NL), string='\n', start=(114, 0), end=(114, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(115, 0), end=(115, 0), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=1 (NAME), string='action', start=(115, 0), end=(115, 6), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=55 (OP), string='[', start=(115, 6), end=(115, 7), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=1 (NAME), string='str', start=(115, 7), end=(115, 10), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=55 (OP), string=']', start=(115, 10), end=(115, 11), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=55 (OP), string=':', start=(115, 11), end=(115, 12), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=3 (STRING), string='"{"', start=(115, 13), end=(115, 16), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=55 (OP), string='~', start=(115, 17), end=(115, 18), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=1 (NAME), string='target_atoms', start=(115, 19), end=(115, 31), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=3 (STRING), string='"}"', start=(115, 32), end=(115, 35), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=55 (OP), string='{', start=(115, 36), end=(115, 37), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=1 (NAME), string='target_atoms', start=(115, 38), end=(115, 50), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=55 (OP), string='}', start=(115, 51), end=(115, 52), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=4 (NEWLINE), string='\n', start=(115, 52), end=(115, 53), line='action[str]: "{" ~ target_atoms "}" { target_atoms }\n')
Token(type=1 (NAME), string='annotation', start=(116, 0), end=(116, 10), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=55 (OP), string='[', start=(116, 10), end=(116, 11), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=1 (NAME), string='str', start=(116, 11), end=(116, 14), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=55 (OP), string=']', start=(116, 14), end=(116, 15), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=55 (OP), string=':', start=(116, 15), end=(116, 16), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=3 (STRING), string='"["', start=(116, 17), end=(116, 20), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=55 (OP), string='~', start=(116, 21), end=(116, 22), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=1 (NAME), string='target_atoms', start=(116, 23), end=(116, 35), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=3 (STRING), string='"]"', start=(116, 36), end=(116, 39), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=55 (OP), string='{', start=(116, 40), end=(116, 41), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=1 (NAME), string='target_atoms', start=(116, 42), end=(116, 54), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=55 (OP), string='}', start=(116, 55), end=(116, 56), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=4 (NEWLINE), string='\n', start=(116, 56), end=(116, 57), line='annotation[str]: "[" ~ target_atoms "]" { target_atoms }\n')
Token(type=65 (NL), string='\n', start=(117, 0), end=(117, 1), line='\n')
Token(type=1 (NAME), string='target_atoms', start=(118, 0), end=(118, 12), line='target_atoms[str]:\n')
Token(type=55 (OP), string='[', start=(118, 12), end=(118, 13), line='target_atoms[str]:\n')
Token(type=1 (NAME), string='str', start=(118, 13), end=(118, 16), line='target_atoms[str]:\n')
Token(type=55 (OP), string=']', start=(118, 16), end=(118, 17), line='target_atoms[str]:\n')
Token(type=55 (OP), string=':', start=(118, 17), end=(118, 18), line='target_atoms[str]:\n')
Token(type=4 (NEWLINE), string='\n', start=(118, 18), end=(118, 19), line='target_atoms[str]:\n')
Token(type=5 (INDENT), string='    ', start=(119, 0), end=(119, 4), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=55 (OP), string='|', start=(119, 4), end=(119, 5), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=1 (NAME), string='target_atom', start=(119, 6), end=(119, 17), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=1 (NAME), string='target_atoms', start=(119, 18), end=(119, 30), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=55 (OP), string='{', start=(119, 31), end=(119, 32), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=1 (NAME), string='target_atom', start=(119, 33), end=(119, 44), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=55 (OP), string='+', start=(119, 45), end=(119, 46), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=3 (STRING), string='" "', start=(119, 47), end=(119, 50), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=55 (OP), string='+', start=(119, 51), end=(119, 52), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=1 (NAME), string='target_atoms', start=(119, 53), end=(119, 65), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=55 (OP), string='}', start=(119, 66), end=(119, 67), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=4 (NEWLINE), string='\n', start=(119, 67), end=(119, 68), line='    | target_atom target_atoms { target_atom + " " + target_atoms }\n')
Token(type=55 (OP), string='|', start=(120, 4), end=(120, 5), line='    | target_atom { target_atom }\n')
Token(type=1 (NAME), string='target_atom', start=(120, 6), end=(120, 17), line='    | target_atom { target_atom }\n')
Token(type=55 (OP), string='{', start=(120, 18), end=(120, 19), line='    | target_atom { target_atom }\n')
Token(type=1 (NAME), string='target_atom', start=(120, 20), end=(120, 31), line='    | target_atom { target_atom }\n')
Token(type=55 (OP), string='}', start=(120, 32), end=(120, 33), line='    | target_atom { target_atom }\n')
Token(type=4 (NEWLINE), string='\n', start=(120, 33), end=(120, 34), line='    | target_atom { target_atom }\n')
Token(type=65 (NL), string='\n', start=(121, 0), end=(121, 1), line='\n')
Token(type=6 (DEDENT), string='', start=(122, 0), end=(122, 0), line='target_atom[str]:\n')
Token(type=1 (NAME), string='target_atom', start=(122, 0), end=(122, 11), line='target_atom[str]:\n')
Token(type=55 (OP), string='[', start=(122, 11), end=(122, 12), line='target_atom[str]:\n')
Token(type=1 (NAME), string='str', start=(122, 12), end=(122, 15), line='target_atom[str]:\n')
Token(type=55 (OP), string=']', start=(122, 15), end=(122, 16), line='target_atom[str]:\n')
Token(type=55 (OP), string=':', start=(122, 16), end=(122, 17), line='target_atom[str]:\n')
Token(type=4 (NEWLINE), string='\n', start=(122, 17), end=(122, 18), line='target_atom[str]:\n')
Token(type=5 (INDENT), string='    ', start=(123, 0), end=(123, 4), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=55 (OP), string='|', start=(123, 4), end=(123, 5), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=3 (STRING), string='"{"', start=(123, 6), end=(123, 9), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=55 (OP), string='~', start=(123, 10), end=(123, 11), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=1 (NAME), string='atoms', start=(123, 12), end=(123, 17), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=55 (OP), string='=', start=(123, 17), end=(123, 18), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=1 (NAME), string='target_atoms', start=(123, 18), end=(123, 30), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=55 (OP), string='?', start=(123, 30), end=(123, 31), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=3 (STRING), string='"}"', start=(123, 32), end=(123, 35), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=55 (OP), string='{', start=(123, 36), end=(123, 37), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=3 (STRING), string='"{"', start=(123, 38), end=(123, 41), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=55 (OP), string='+', start=(123, 42), end=(123, 43), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=55 (OP), string='(', start=(123, 44), end=(123, 45), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=1 (NAME), string='atoms', start=(123, 45), end=(123, 50), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=1 (NAME), string='or', start=(123, 51), end=(123, 53), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=3 (STRING), string='""', start=(123, 54), end=(123, 56), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=55 (OP), string=')', start=(123, 56), end=(123, 57), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=55 (OP), string='+', start=(123, 58), end=(123, 59), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=3 (STRING), string='"}"', start=(123, 60), end=(123, 63), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=55 (OP), string='}', start=(123, 64), end=(123, 65), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=4 (NEWLINE), string='\n', start=(123, 65), end=(123, 66), line='    | "{" ~ atoms=target_atoms? "}" { "{" + (atoms or "") + "}" }\n')
Token(type=55 (OP), string='|', start=(124, 4), end=(124, 5), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=3 (STRING), string='"["', start=(124, 6), end=(124, 9), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=55 (OP), string='~', start=(124, 10), end=(124, 11), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=1 (NAME), string='atoms', start=(124, 12), end=(124, 17), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=55 (OP), string='=', start=(124, 17), end=(124, 18), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=1 (NAME), string='target_atoms', start=(124, 18), end=(124, 30), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=55 (OP), string='?', start=(124, 30), end=(124, 31), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=3 (STRING), string='"]"', start=(124, 32), end=(124, 35), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=55 (OP), string='{', start=(124, 36), end=(124, 37), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=3 (STRING), string='"["', start=(124, 38), end=(124, 41), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=55 (OP), string='+', start=(124, 42), end=(124, 43), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=55 (OP), string='(', start=(124, 44), end=(124, 45), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=1 (NAME), string='atoms', start=(124, 45), end=(124, 50), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=1 (NAME), string='or', start=(124, 51), end=(124, 53), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=3 (STRING), string='""', start=(124, 54), end=(124, 56), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=55 (OP), string=')', start=(124, 56), end=(124, 57), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=55 (OP), string='+', start=(124, 58), end=(124, 59), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=3 (STRING), string='"]"', start=(124, 60), end=(124, 63), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=55 (OP), string='}', start=(124, 64), end=(124, 65), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=4 (NEWLINE), string='\n', start=(124, 65), end=(124, 66), line='    | "[" ~ atoms=target_atoms? "]" { "[" + (atoms or "") + "]" }\n')
Token(type=55 (OP), string='|', start=(125, 4), end=(125, 5), line='    | NAME "*" { name.string + "*" }\n')
Token(type=1 (NAME), string='NAME', start=(125, 6), end=(125, 10), line='    | NAME "*" { name.string + "*" }\n')
Token(type=3 (STRING), string='"*"', start=(125, 11), end=(125, 14), line='    | NAME "*" { name.string + "*" }\n')
Token(type=55 (OP), string='{', start=(125, 15), end=(125, 16), line='    | NAME "*" { name.string + "*" }\n')
Token(type=1 (NAME), string='name', start=(125, 17), end=(125, 21), line='    | NAME "*" { name.string + "*" }\n')
Token(type=55 (OP), string='.', start=(125, 21), end=(125, 22), line='    | NAME "*" { name.string + "*" }\n')
Token(type=1 (NAME), string='string', start=(125, 22), end=(125, 28), line='    | NAME "*" { name.string + "*" }\n')
Token(type=55 (OP), string='+', start=(125, 29), end=(125, 30), line='    | NAME "*" { name.string + "*" }\n')
Token(type=3 (STRING), string='"*"', start=(125, 31), end=(125, 34), line='    | NAME "*" { name.string + "*" }\n')
Token(type=55 (OP), string='}', start=(125, 35), end=(125, 36), line='    | NAME "*" { name.string + "*" }\n')
Token(type=4 (NEWLINE), string='\n', start=(125, 36), end=(125, 37), line='    | NAME "*" { name.string + "*" }\n')
Token(type=55 (OP), string='|', start=(126, 4), end=(126, 5), line='    | NAME { name.string }\n')
Token(type=1 (NAME), string='NAME', start=(126, 6), end=(126, 10), line='    | NAME { name.string }\n')
Token(type=55 (OP), string='{', start=(126, 11), end=(126, 12), line='    | NAME { name.string }\n')
Token(type=1 (NAME), string='name', start=(126, 13), end=(126, 17), line='    | NAME { name.string }\n')
Token(type=55 (OP), string='.', start=(126, 17), end=(126, 18), line='    | NAME { name.string }\n')
Token(type=1 (NAME), string='string', start=(126, 18), end=(126, 24), line='    | NAME { name.string }\n')
Token(type=55 (OP), string='}', start=(126, 25), end=(126, 26), line='    | NAME { name.string }\n')
Token(type=4 (NEWLINE), string='\n', start=(126, 26), end=(126, 27), line='    | NAME { name.string }\n')
Token(type=55 (OP), string='|', start=(127, 4), end=(127, 5), line='    | NUMBER { number.string }\n')
Token(type=1 (NAME), string='NUMBER', start=(127, 6), end=(127, 12), line='    | NUMBER { number.string }\n')
Token(type=55 (OP), string='{', start=(127, 13), end=(127, 14), line='    | NUMBER { number.string }\n')
Token(type=1 (NAME), string='number', start=(127, 15), end=(127, 21), line='    | NUMBER { number.string }\n')
Token(type=55 (OP), string='.', start=(127, 21), end=(127, 22), line='    | NUMBER { number.string }\n')
Token(type=1 (NAME), string='string', start=(127, 22), end=(127, 28), line='    | NUMBER { number.string }\n')
Token(type=55 (OP), string='}', start=(127, 29), end=(127, 30), line='    | NUMBER { number.string }\n')
Token(type=4 (NEWLINE), string='\n', start=(127, 30), end=(127, 31), line='    | NUMBER { number.string }\n')
Token(type=55 (OP), string='|', start=(128, 4), end=(128, 5), line='    | STRING { string.string }\n')
Token(type=1 (NAME), string='STRING', start=(128, 6), end=(128, 12), line='    | STRING { string.string }\n')
Token(type=55 (OP), string='{', start=(128, 13), end=(128, 14), line='    | STRING { string.string }\n')
Token(type=1 (NAME), string='string', start=(128, 15), end=(128, 21), line='    | STRING { string.string }\n')
Token(type=55 (OP), string='.', start=(128, 21), end=(128, 22), line='    | STRING { string.string }\n')
Token(type=1 (NAME), string='string', start=(128, 22), end=(128, 28), line='    | STRING { string.string }\n')
Token(type=55 (OP), string='}', start=(128, 29), end=(128, 30), line='    | STRING { string.string }\n')
Token(type=4 (NEWLINE), string='\n', start=(128, 30), end=(128, 31), line='    | STRING { string.string }\n')
Token(type=55 (OP), string='|', start=(129, 4), end=(129, 5), line='    | "?" { "?" }\n')
Token(type=3 (STRING), string='"?"', start=(129, 6), end=(129, 9), line='    | "?" { "?" }\n')
Token(type=55 (OP), string='{', start=(129, 10), end=(129, 11), line='    | "?" { "?" }\n')
Token(type=3 (STRING), string='"?"', start=(129, 12), end=(129, 15), line='    | "?" { "?" }\n')
Token(type=55 (OP), string='}', start=(129, 16), end=(129, 17), line='    | "?" { "?" }\n')
Token(type=4 (NEWLINE), string='\n', start=(129, 17), end=(129, 18), line='    | "?" { "?" }\n')
Token(type=55 (OP), string='|', start=(130, 4), end=(130, 5), line='    | ":" { ":" }\n')
Token(type=3 (STRING), string='":"', start=(130, 6), end=(130, 9), line='    | ":" { ":" }\n')
Token(type=55 (OP), string='{', start=(130, 10), end=(130, 11), line='    | ":" { ":" }\n')
Token(type=3 (STRING), string='":"', start=(130, 12), end=(130, 15), line='    | ":" { ":" }\n')
Token(type=55 (OP), string='}', start=(130, 16), end=(130, 17), line='    | ":" { ":" }\n')
Token(type=4 (NEWLINE), string='\n', start=(130, 17), end=(130, 18), line='    | ":" { ":" }\n')
Token(type=55 (OP), string='|', start=(131, 4), end=(131, 5), line='    | !"}" !"]" OP { op.string }\n')
Token(type=55 (OP), string='!', start=(131, 6), end=(131, 7), line='    | !"}" !"]" OP { op.string }\n')
Token(type=3 (STRING), string='"}"', start=(131, 7), end=(131, 10), line='    | !"}" !"]" OP { op.string }\n')
Token(type=55 (OP), string='!', start=(131, 11), end=(131, 12), line='    | !"}" !"]" OP { op.string }\n')
Token(type=3 (STRING), string='"]"', start=(131, 12), end=(131, 15), line='    | !"}" !"]" OP { op.string }\n')
Token(type=1 (NAME), string='OP', start=(131, 16), end=(131, 18), line='    | !"}" !"]" OP { op.string }\n')
Token(type=55 (OP), string='{', start=(131, 19), end=(131, 20), line='    | !"}" !"]" OP { op.string }\n')
Token(type=1 (NAME), string='op', start=(131, 21), end=(131, 23), line='    | !"}" !"]" OP { op.string }\n')
Token(type=55 (OP), string='.', start=(131, 23), end=(131, 24), line='    | !"}" !"]" OP { op.string }\n')
Token(type=1 (NAME), string='string', start=(131, 24), end=(131, 30), line='    | !"}" !"]" OP { op.string }\n')
Token(type=55 (OP), string='}', start=(131, 31), end=(131, 32), line='    | !"}" !"]" OP { op.string }\n')
Token(type=4 (NEWLINE), string='\n', start=(131, 32), end=(131, 33), line='    | !"}" !"]" OP { op.string }\n')
Token(type=6 (DEDENT), string='', start=(132, 0), end=(132, 0), line='')
Token(type=0 (ENDMARKER), string='', start=(132, 0), end=(132, 0), line='')
